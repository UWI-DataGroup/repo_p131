** HEADER -----------------------------------------------------
**  DO-FILE METADATA
    //  algorithm name          10_prep_mort.do
    //  project:                BNR
    //  analysts:               Jacqueline CAMPBELL
    //  date first created      03-MAR-2021
    // 	date last modified      04-MAR-2021
    //  algorithm task          Prep and format death data
    //  status                  Completed
    //  objective               To have multiple datasets with cleaned death data for matching and reporting.
    
    ** General algorithm set-up
    version 16.0
    clear all
    macro drop _all
    set more off

    ** Initialising the STATA log and allow automatic page scrolling
    capture {
            program drop _all
    	drop _all
    	log close
    	}

    ** Set working directories: this is for DATASET and LOGFILE import and export
    ** DATASETS to encrypted SharePoint folder
    local datapath "X:/The University of the West Indies/DataGroup - repo_data/data_p117"
    ** LOGFILES to unencrypted OneDrive folder (.gitignore set to IGNORE log files on PUSH to GitHub)
    local logpath X:/OneDrive - The University of the West Indies/repo_datagroup/repo_p117

    ** Close any open log file and open a new log file
    capture log close
    log using "`logpath'\10_prep_mort.smcl", replace
** HEADER -----------------------------------------------------

***************
** DATA IMPORT  
***************
** LOAD the national registry deaths 2008-2018 excel dataset
** IMPORTANT before importing excel death workbook, perform the below:
/*
	(1) Right-click in the selected area of 'variable' and select 'Format cells'
	(2)	Click 'Custom' and in the bar under 'Type:', enter the below customizations:
		dddoa:			yyyy-mm-dd hh:mm
		ddda:			00
		regnum:			0000
		nrn:			0000000000
		dod:			yyyy-mm-dd
		regdate:		yyyy-mm-dd
		tfdddoa:		yyyy-mm-dd
		tfdddoatstart:	hh:mm
		tfregnumstart:	0000
		tfregnumend:	0000
		tfdddoaend:		yyyy-mm-dd hh:mm
		tfdddoatend:	hh:mm
*/
import excel using "`datapath'\version04\1-input\BNRDeathData20082020_DATA_2021-03-03_1930_excel.xlsx" , firstrow case(lower)

count //31,179

*******************
** DATA FORMATTING  
*******************
** PREPARE each variable according to the format and order in which they appear in DeathData REDCap database

************************
**  DEATH CERTIFICATE **
**        FORM        **
************************

** (1) record_id (auto-generated by REDCap)
label var record_id "record_id"

** (2) redcap_event_name (auto-generated by REDCap)
gen event=.
replace event=1 if redcap_event_name=="death_data_collect_arm_1" //30,967 changes
replace event=2 if redcap_event_name=="tracking_arm_2" //212 changes
drop redcap_event_name

label var event "Redcap Event Name"
label define event_lab 1 "DC arm 1" 2 "TF arm 2", modify
label values event event_lab

** (3) dddoa: Y-M-D H:M, readonly
gen double dddoa2 = clock(dddoa, "YMDhm")
format dddoa2 %tcCCYY-NN-DD_HH:MM
drop dddoa
rename dddoa2 dddoa
label var dddoa "ABS DateTime"

** (4) ddda
label var ddda "ABS DA"
label define ddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values ddda ddda_lab

** (5) odda
label var odda "ABS Other DA"

** (6) certtype: 1=MEDICAL 2=POST MORTEM 3=CORONER 99=ND, required
label var certtype "Certificate Type"
label define certtype_lab 1 "Medical" 2 "Post Mortem" 3 "Coroner" 99 "ND", modify
label values certtype certtype_lab

** (7) regnum: integer, if missing=9999
label var regnum "Registry Dept #"

** (8) district: 1=A 2=B 3=C 4=D 5=E 6=F
/* Districts are assigned based on death parish
	District A - anything below top rock christ church and st. michael 
	District B - anything above top rock christ church and st. george
	District C - st. philip and st. john
	District D - st. thomas
	District E - st. james, st. peter, st. lucy
	District F - st. joseph, st. andrew
*/
label var district "District"
label define district_lab 1 "A" 2 "B" 3 "C" 4 "D" 5 "E" 6 "F", modify
label values district district_lab

** (9) pname: Text, if missing=99
label var pname "Deceased's Name"
replace pname = rtrim(ltrim(itrim(pname))) //0 changes

** (10) address: Text, if missing=99
label var address "Deceased's Address"
replace address = rtrim(ltrim(itrim(address))) //0 changes

** (11) parish
label var parish "Deceased's Parish"
label define parish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values parish parish_lab

** (12) sex:	1=Male 2=Female 99=ND
label var sex "Sex"
label define sex_lab 1 "Male" 2 "Female" 99 "ND", modify
label values sex sex_lab

** (13) age: Integer - min=0, max=999
label var age "Age"

** (14) agetxt
label var agetxt "Age Qualifier"
label define agetxt_lab 1 "Minutes" 2 "Hours" 3 "Days" 4 "Weeks" 5 "Months" 6 "Years" 99 "ND", modify
label values agetxt agetxt_lab

** (15) nrnnd: 1=Yes 2=No
label var nrnnd "Is National ID # documented?"

** (16) nrn: dob-####, partial missing=dob-9999, if missing=.
label var nrn "National ID #"
format nrn %15.0g

** (17) mstatus: 1=Single 2=Married 3=Separated/Divorced 4=Widowed/Widow/Widower 99=ND
label var mstatus "Marital Status"
label define mstatus_lab 1 "Single" 2 "Married" 3 "Separated/Divorced" 4 "Widowed/Widow/Widower" 99 "ND", modify
label values mstatus mstatus_lab

** (18) occu: Text, if missing=99
label var occu "Occupation"

** (19) durationnum: Integer - min=0, max=99, if missing=99
label var durationnum "Duration of Illness"

** (20) durationtxt
label var durationtxt "Duration Qualifier"
label define durationtxt_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values durationtxt durationtxt_lab

** (21) dod: Y-M-D
format dod %tdCCYY-NN-DD
label var dod "Date of Death"

** (22) dodyear (not included in single year Redcap db but done for multi-year Redcap db)
//gen int dodyear=year(dod)
label var dodyear "Year of Death"

** (23) cod1a: Text, if missing=99
label var cod1a "COD 1a"

** (24) onsetnumcod1a: Integer - min=0, max=99, if missing=99
label var onsetnumcod1a "Onset Death Interval-COD 1a"

** (25) onsettxtcod1a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1a "Onset Qualifier-COD 1a"
label define onsettxtcod1a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1a onsettxtcod1a_lab

** (26) cod1b: Text, if missing=99
label var cod1b "COD 1b"

** (27) onsetnumcod1b: Integer - min=0, max=99, if missing=99
label var onsetnumcod1b "Onset Death Interval-COD 1b"

** (28) onsettxtcod1b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1b "Onset Qualifier-COD 1b"
label define onsettxtcod1b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1b onsettxtcod1b_lab

** (29) cod1c: Text, if missing=99
label var cod1c "COD 1c"

** (30) onsetnumcod1c: Integer - min=0, max=99, if missing=99
label var onsetnumcod1c "Onset Death Interval-COD 1c"

** (31) onsettxtcod1c: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1c "Onset Qualifier-COD 1c"
label define onsettxtcod1c_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1c onsettxtcod1c_lab

** (32) cod1d: Text, if missing=99
label var cod1d "COD 1d"

** (33) onsetnumcod1d: Integer - min=0, max=99, if missing=99
label var onsetnumcod1d "Onset Death Interval-COD 1d"

** (34) onsettxtcod1d: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1d "Onset Qualifier-COD 1d"
label define onsettxtcod1d_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1d onsettxtcod1d_lab

** (35) cod2a: Text, if missing=99
label var cod2a "COD 2a"

** (36) onsetnumcod2a: Integer - min=0, max=99, if missing=99
label var onsetnumcod2a "Onset Death Interval-COD 2a"

** (37) onsettxtcod2a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2a "Onset Qualifier-COD 2a"
label define onsettxtcod2a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2a onsettxtcod2a_lab

** (38) cod2b: Text, if missing=99
label var cod2b "COD 2b"

** (39) onsetnumcod2b: Integer - min=0, max=99, if missing=99
label var onsetnumcod2b "Onset Death Interval-COD 2b"

** (40) onsettxtcod2b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2b "Onset Qualifier-COD 2b"
label define onsettxtcod2b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2b onsettxtcod2b_lab

** (41) pod: Text, if missing=99
label var pod "Place of Death"

** (42) deathparish
label var deathparish "Death Parish"
label define deathparish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values deathparish deathparish_lab

** (43) regdate: Y-M-D
label var regdate "Date of Registration"
format regdate %tdCCYY-NN-DD

** (44) certifier: Text, if missing=99
label var certifier "Name of Certifier"

** (45) certifieraddr: Text, if missing=99
label var certifieraddr "Address of Certifier"

** (46) namematch: readonly
label var namematch "Name Match"
label define namematch_lab 1 "names match but different person" 2 "no name match", modify
label values namematch namematch_lab

** (47) death_certificate_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename death_certificate_complete recstatdc
label var recstatdc "Record Status-DC Form"
label define recstatdc_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstatdc recstatdc_lab


*******************
** TRACKING FORM **
*******************

** (48) tfdddoa: Y-M-D H:M, readonly
format tfdddoa %tdYYYY-NN-DD
label var tfdddoa "TF Date-Start"

** (49) tfdddoatstart: HH:MM
format tfdddoatstart %tcHH:MM
label var tfdddoatstart "TF Time-Start"

** (50) tfddda: readonly, user logged into redcap
gen tfddda1=.
replace tfddda1=25 if tfddda=="ashley.henry" //using codebook tfddda to see all possible entries in this field
replace tfddda1=25 if tfddda=="ashleyhenry"
replace tfddda1=4 if tfddda=="karen.greene"
replace tfddda1=13 if tfddda=="kirt.gill"
replace tfddda1=20 if tfddda=="nicolette.roachford"
replace tfddda1=14 if tfddda=="tamisha.hunte"
replace tfddda1=98 if tfddda=="t.g"
replace tfddda1=98 if tfddda=="thelema.grannum"
replace tfddda1=98 if tfddda=="ivanna.bascombe"
replace tfddda1=98 if tfddda=="ib"
replace tfddda1=98 if tfddda=="asia.blackman"
replace tfddda1=98 if tfddda=="ab"
replace tfddda1=98 if tfddda=="shay.morrisdoty"
replace tfddda1=98 if tfddda=="bnr.intern"
rename tfddda tfddda2
rename tfddda1 tfddda

label var tfddda "TF DA"
label define tfddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values tfddda tfddda_lab

** (51) tfregnumstart: integer
label var tfregnumstart "Registry #-Start"

** (52) tfdistrictstart: letters only
label var tfdistrictstart "District-Start"

** (53) tfregnumend: integer
label var tfregnumend "Registry #-End"

** (54) tfdistrictend: letters only
label var tfdistrictend "District-End"

** (55) tfdddoaend: Y-M-D
format tfdddoaend %tdCCYY-NN-DD
label var tfdddoaend "TF Date-End"

** (56) tfdddoatend: HH:MM
format tfdddoatend %tcHH:MM
label var tfdddoatend "TF Time-End"

** (57) tfddelapsedh: integer (imported to Stata as byte)
recast int tfddelapsedh
label var tfddelapsedh "Time Elpased (hrs)"

** (58) tfddelapsedm: integer
label var tfddelapsedm "Time Elpased (mins)"

** (59) tfddtxt
label var tfddtxt "TF Comments"

** (60) tracking_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename tracking_complete recstattf
label var recstattf "Record Status-TF Form"
label define recstattf_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstattf recstattf_lab

order record_id event dddoa ddda odda certtype regnum district pname address parish sex ///
      age agetxt nrnnd nrn mstatus occu durationnum durationtxt dod dodyear ///
      cod1a onsetnumcod1a onsettxtcod1a cod1b onsetnumcod1b onsettxtcod1b ///
      cod1c onsetnumcod1c onsettxtcod1c cod1d onsetnumcod1d onsettxtcod1d ///
      cod2a onsetnumcod2a onsettxtcod2a cod2b onsetnumcod2b onsettxtcod2b ///
      pod deathparish regdate certifier certifieraddr namematch recstatdc ///
      tfdddoa tfdddoatstart tfddda tfregnumstart tfdistrictstart tfregnumend tfdistrictend ///
	  tfdddoaend tfdddoatend tfddelapsedh tfddelapsedm tfddtxt recstattf

count //31,179

label data "BNR MORTALITY data 2008-2020 (2020 incomplete)"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version04\3-output\2008-2020_deaths_tf" ,replace
note: TS The tracking form data is included in this dataset

**********************
**     Preparing    **
**    2016, 2017,   **
**    2018, 2019    **
**      Deaths      **
**********************
** Next we get rid of those who died pre-2016
drop if dod<d(01jan2016) | dod>d(31dec2019) //20,638 deleted (removed 2020 deaths as that year still incomplete as of 03mar2021)
** Remove Tracking Form info
drop if event==2 //212 deleted

count //10,329

*****************
**  Formatting **
**    Names    **
*****************
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name9=="" & name8=="" & name7=="" & name6=="" & name5=="" & name4=="" & name3=="" //7686
count if name8=="" & name7=="" & name6=="" & name5=="" & name4=="" & name3=="" //7686
count if name7=="" & name6=="" & name5=="" & name4=="" & name3=="" //7686
count if name6=="" & name5=="" & name4=="" & name3=="" //7686
count if name5=="" & name4=="" & name3=="" //7686
count if name4=="" & name3=="" & name2=="" //5
count if name3=="" & name2=="" //5
count if name2=="" //5
count if name1=="" //0
replace name5=name2 if name5=="" & name3=="" & name4=="" //7681
replace name2="" if name3=="" & name4=="" //7681

** (2) sort cases with name 'baby' or 'b/o' in name1 variable
count if (regexm(pname,"BABY")|regexm(pname,"B/O")|regexm(pname,"MALE")|regexm(pname,"FEMALE")) //35
gen tempvarn=1 if (regexm(pname,"BABY")|regexm(pname,"B/O")|regexm(pname,"MALE")|regexm(pname,"FEMALE")) & record_id!=20375 & record_id!=28310
//list record_id pname name1 name2 name3 name4 name5 if tempvarn==1
//list record_id pname name6 name7 if tempvarn==1
replace name1=name1+" "+name2 if tempvarn==1 & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885 & record_id!=28087 & record_id!=28164 & record_id!=28494) //26 changes
replace name1=name1+" "+name3 if record_id==24336
replace name2="" if name2=="OF"|name2=="INFANT" //26 changes
replace name3="" if name3=="OF" //1 change
replace name2=name3 if tempvarn==1 & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885 & record_id!=28087 & record_id!=28164 & record_id!=28494) //25 changes
replace name2=name4 if record_id==24336
replace name3=name5 if record_id==24336
replace name4="" if record_id==24336
replace name5="" if record_id==24336
replace name3=name4 if tempvarn==1 & name4!="" & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885 & record_id!=24008 & record_id!=28087 & record_id!=28164 & record_id!=28494) //24 changes
replace name2=name2+" "+name4+" "+name5 if record_id==24008
replace name3=name6 if record_id==24008
replace name2=name2+" "+name5+" "+name6+" "+name7 if record_id==26406
replace name2=name2+" "+name4+" "+name5+" "+name6 if record_id==26692
replace name2=name6+" "+"("+name1+" "+name2+" "+name3+")" if record_id==28087
replace name3=name7 if record_id==28087
replace name3=subinstr(name3,"]","",.) if record_id==28087
replace name1=name5 if record_id==28087
replace name2=name7+" "+"("+name1+" "+name2+" "+name3+")" if record_id==28164
replace name1=name5+" "+name6 if record_id==28164
replace name2=name8+" "+"("+name1+" "+name2+" "+name3+" "+name4+")" if record_id==28494
replace name3=name4 if record_id==28494
replace name1=name6+" "+name7 if record_id==28494
replace name4="" if tempvarn==1 //29 changes
replace name5="" if tempvarn==1 //6 changes
replace name6="" if tempvarn==1 //6 changes
replace name7="" if tempvarn==1 //4 changes
replace name8="" if tempvarn==1 //2 changes
replace name9="" if tempvarn==1 //1 change

** (3) sort cases with name in name6 variable
count if name6!="" //1
//list record_id *name* if name6!=""
replace name7=name2 if record_id==25050
replace name2=name3+" "+name4+" "+name5+" "+name6 if record_id==25050
replace name3=name7 if record_id==25050
replace name4="" if record_id==25050
replace name5="" if record_id==25050
replace name6="" if record_id==25050
replace name7="" if record_id==25050

** (4) sort cases with name in name5 variable
count if name5!="" //7686
count if name5!="" & name2!="" //7
//list record_id *name* if name5!=""
replace name2=name2+" "+name3+" "+name4 if record_id==20877|record_id==23269|record_id==24056
replace name3="" if record_id==20877|record_id==23269|record_id==24056
replace name4="" if record_id==20877|record_id==23269|record_id==24056
replace name3=name5 if record_id==20877|record_id==23269|record_id==24056
replace name5="" if record_id==20877|record_id==23269|record_id==24056
replace name2=name2+" "+name3+name4 if record_id==25248
replace name1=name1+"."+name2 if record_id==22814
replace name2=name3+"."+name4 if record_id==22814
replace name4="" if record_id==22814|record_id==25248
replace name3=name5 if record_id==22814|record_id==25248
replace name5="" if record_id==22814|record_id==25248
replace name2=name2+" "+name3 if record_id==20790
replace name3=name4+"."+" "+name5 if record_id==20790
replace name2=name2+" "+name3+"."+" "+name4 if record_id==29474
replace name3=name5 if record_id==29474
replace name4="" if name5!="" & name2!="" //2 changes
replace name5="" if name5!="" & name2!="" //2 changes
replace name3=name5 if name5!="" //7681 changes
replace name5="" if name5!="" //7681 changes

** (5)
** Names containing 'ST' are being interpreted as 'ST'=name1/fname so correct
count if name1=="ST" | name1=="ST." //16
replace tempvarn=2 if name1=="ST" | name1=="ST."
//list record_id pname name1 name2 name5 if tempvarn==2
replace name1=name1+"."+""+name2 if tempvarn==2 //16 changes
replace name2="" if tempvarn==2 //16 changes
replace name2=name3 if record_id==24517|record_id==20508
replace name3=name4 if record_id==24517|record_id==20508
replace name4="" if record_id==24517|record_id==20508
replace name1 = subinstr(name1, ".", "",1) if record_id==24517|record_id==24774|record_id==27531
** Names containing 'ST' are being interpreted as 'ST'=name2/fname so correct
count if name2=="ST" | name2=="ST." //49
replace tempvarn=3 if name2=="ST" | name2=="ST."
replace name2=name2+"."+""+name3 if tempvarn==3 //49 changes
replace name2 = subinstr(name2, ".", "",1) if record_id==19323|record_id==19969|record_id==24127|record_id==25166|record_id==25420|record_id==25984|record_id==26481|record_id==26593|record_id==26936|record_id==27093|record_id==27095|record_id==29700|record_id==29701
replace name3=name2 if tempvarn==3 & name4=="" //16 changes
replace name2="" if tempvarn==3 & name4=="" //16 changes
replace name3="" if tempvarn==3 & name4!="" //33 changes
replace name3=name4 if tempvarn==3 & name4!="" //33 changes
replace name4="" if tempvarn==3 //33 changes
//replace name3=name2 if tempvarn==3 & name3=="" //4 changes
//replace name2="" if tempvarn==3 & name2==name3
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name3=="ST" | name3=="ST." //5
replace tempvarn=4 if name3=="ST" | name3=="ST."
replace name3=name3+"."+""+name4 if tempvarn==4 //5 changes
replace name4="" if tempvarn==4 //5 changes

** (6) sort cases with name in name4 variable
count if name4!="" //135
//list record_id *name* if name4!=""
replace name3=name3+" "+name4 if record_id==20249
replace name3=name3+"-"+name4 if record_id==19428
replace name4="" if record_id==20249|record_id==19428
replace name2=name2+" "+name3 if name4!="" //133 changes
replace name3=name4 if name4!="" //133 changes
replace name4="" if name4!="" //133 changes

** (7) sort cases with NO name in name3 variable
count if name3=="" //5
//list record_id *name* if name3==""
replace name3=substr(name1,6,11) if record_id==25303
replace name1=substr(name1,1,5) if record_id==25303
replace name3=substr(name1,8,7) if record_id==25414
replace name2=substr(name1,7,1) if record_id==25414
replace name1=substr(name1,1,6) if record_id==25414
replace name3="99" if name3=="" //3 changes

** (8) sort cases with suffixes
count if (name3!="" & name3!="99") & length(name3)<4 //89 - 2 need correcting
replace tempvarn=5 if (name3!="" & name3!="99") & length(name3)<4
//list record_id pname fname mname lname if (lname!="" & lname!="99") & length(lname)<3
drop if record_id==24108 //1 deleted - same as record_id=24107
replace name3=name2+" "+name3 if record_id==24107
replace name2="" if record_id==24107

** Now rename, check and remove unnecessary variables
rename name1 fname
rename name2 mname
rename name3 lname
count if fname=="" //0
count if lname=="" //0
drop name4 name5 name6 name7 name8 name9 tempvarn

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //10,328 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //2,608 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //10,325 changes

rename nm namematch
order record_id pname fname mname lname namematch

*************************
** Checking & Removing ** 
**   Duplicate Death   **
**    Registrations    **
*************************
/* 
NB: These deaths were cleaned previously for importing into DeathData REDCapdb 
so the field namematch can be used as a guide for checking duplicates
	1=names match but different person
	2=no name match
*/
//label define namematch_lab 1 "deaths only namematch,diff.pt" 2 "no namematch" 3 "cr5 & death namematch,diff.pt" 4 "slc=2/9,not in deathdata", modify
//label values namematch namematch_lab
sort lname fname record_id
quietly by lname fname : gen dupname = cond(_N==1,0,_n)
sort lname fname record_id
count if dupname>0 //646
/* 
Check below list for cases where namematch=no match but 
there is a pt with same name then:
 (1) check if same pt and remove duplicate pt;
 (2) check if same name but different pt and
	 update namematch variable to reflect this, i.e.
	 namematch=1
*/
//list record_id namematch fname lname nrn dod sex age if dupname>0
drop if record_id==26532 //1 deleted - duplicate registration for record_id=26283
drop if record_id==25379 //1 deleted - duplicate registration for record_id=26481
drop if record_id==27002 //1 deleted - duplicate registration for record_id=26778
replace cod1c=cod1a if record_id==27642
replace certtype=3 if record_id==27642
replace cod1a="SMALL BOWEL OBSTRUCTION" if record_id==27642
replace onsetnumcod1a=999 if record_id==27642
replace onsettxtcod1a=. if record_id==27642
replace cod1b="STRANGULATED INGUINAL HERNIA" if record_id==27642
replace onsetnumcod1b=999 if record_id==27642
replace onsetnumcod1c=99 if record_id==27642
replace onsettxtcod1c=4 if record_id==27642
drop if record_id==27644 //1 deleted - duplicate registration for record_id=27642

list record_id pname dod namematch if dupname>0

capture export_excel record_id nrn mstatus durationnum durationtxt pod certifier certifieraddr if record_id==27566 using "`datapath'\version04\2-working\DUPNAMEV01.xlsx", sheet("2018 DCOs_deathdata_20210304") firstrow(variables) replace

preserve
clear
import excel using "`datapath'\version04\2-working\DUPNAMEV01.xlsx" , firstrow case(lower)
replace record_id=27600 if record_id==27566
rename nrn nrn_dup
rename mstatus mstatus_dup
rename durationnum durationnum_dup
rename durationtxt durationtxt_dup
rename pod pod_dup
rename certifier certifier_dup
rename certifieraddr certifieraddr_dup
save "`datapath'\version04\2-working\2016-2019_deaths_missing_nrn" ,replace
restore
merge 1:1 record_id using "`datapath'\version04\2-working\2016-2019_deaths_missing_nrn" ,force
/*
    Result                           # of obs.
    -----------------------------------------
    not matched                        10,323
        from master                    10,323  (_merge==1)
        from using                          0  (_merge==2)

    matched                                 1  (_merge==3)
    -----------------------------------------
*/
format nrn_dup %15.0g
replace nrn=nrn_dup if record_id==27600
replace mstatus_dup="4" if record_id==27600
destring mstatus_dup ,replace
replace mstatus=mstatus_dup if record_id==27600
replace durationnum=durationnum_dup if record_id==27600
replace durationtxt_dup="4" if record_id==27600
destring durationtxt_dup ,replace
replace durationtxt=durationtxt_dup if record_id==27600
replace pod=pod_dup if record_id==27600
replace certifier=certifier_dup if record_id==27600
replace certifieraddr=certifieraddr_dup if record_id==27600

drop *_dup* _merge
drop if record_id==27566 //1 deleted - duplicate registration for record_id=27600
sort lname fname record_id

//list record_id pname dod namematch if dupname>0 & namematch!=1
replace namematch=1 if dupname>0 //444 changes

** Check for duplicates by nrn
preserve
drop if nrn==.
sort nrn 
quietly by nrn : gen dupnrn = cond(_N==1,0,_n)
sort nrn record_id lname fname
count if dupnrn>0 //8 - check the electoral list as these NRNs seem to be misassigned
list record_id namematch fname lname nrn dod sex age if dupnrn>0
//replace namematch=1 if dupnrn>0 // changes - all have different NRNs and pt pnames
restore

** Manually created electoral excel list with corrected NRNs from misassigned NRNs above
preserve
clear
import excel using "`datapath'\version04\2-working\NRNelectoral_20210304.xlsx" , firstrow case(lower)
save "`datapath'\version04\2-working\2016-2019_deaths_corrected_nrn" ,replace
restore
merge 1:1 record_id using "`datapath'\version04\2-working\2016-2019_deaths_corrected_nrn" ,force
/*
    Result                           # of obs.
    -----------------------------------------
    not matched                        10,319
        from master                    10,319  (_merge==1)
        from using                          0  (_merge==2)

    matched                                 4  (_merge==3)
    -----------------------------------------
*/
destring elec_nrn ,replace
format elec_nrn %15.0g
replace nrn=elec_nrn if record_id==24705|record_id==28561|record_id==25061|record_id==27997 //4 changes
replace mname=elec_mname if record_id==24705|record_id==28561|record_id==27997 //3 changes
replace age=33 if record_id==24705
replace age=88 if record_id==28561
replace age=83 if record_id==25061
replace age=40 if record_id==27997
drop elec_* _merge


** Check for duplicates by dod (+ name)
sort lname dod
quietly by lname dod: gen dupdod = cond(_N==1,0,_n)
sort lname fname dod record_id
count if dupdod>0 //299 - diff.pt & namematch already=1
//list record_id namematch fname lname nrn dod sex age if dupdod>0
list record_id namematch fname lname nrn dod sex age if dupdod>0 & dupname>0
//replace namematch=1 if dupdod>0 // changes
count if dupdod>0 & namematch!=1 //0

** Final check for duplicates by name and dod 
sort lname fname dod
quietly by lname fname dod: gen dupnamedod = cond(_N==1,0,_n)
sort lname fname dod record_id
count if dupnamedod>0 //2 - diff.pt & namematch already=1
list record_id namematch fname lname nrn dod sex age if dupnamedod>0
count if dupnamedod>0 & namematch!=1 //0

count //10,323

** Now generate a new variable which will select out all the potential cancers
gen cancer=.
label define cancer_lab 1 "cancer" 2 "not cancer", modify
label values cancer cancer_lab
label var cancer "cancer diagnoses"
label var record_id "Event identifier for registry deaths"

** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //28 changes
replace cod1c="99" if cod1c=="999" //46 changes
replace cod1d="99" if cod1d=="999" //57 changes
replace cod2a="99" if cod2a=="999" //47 changes
replace cod2b="99" if cod2b=="999" //56 changes
count if cod1c!="99" //1130
count if cod1d!="99" //281
count if cod2a!="99" //2132
count if cod2b!="99" //970
//ssc install unique
//ssc install distinct
** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //10,187
replace coddeath=subinstr(coddeath," 99","",.) //9,352
** Identify cancer deaths using variable called 'cancer'
replace cancer=1 if regexm(coddeath, "CANCER") & cancer==. //1403 changes
replace cancer=1 if regexm(coddeath, "TUMOUR") &  cancer==. //56 changes
replace cancer=1 if regexm(coddeath, "TUMOR") &  cancer==. //35 changes
replace cancer=1 if regexm(coddeath, "MALIGNANT") &  cancer==. //29 changes
replace cancer=1 if regexm(coddeath, "MALIGNANCY") &  cancer==. //134 changes
replace cancer=1 if regexm(coddeath, "NEOPLASM") &  cancer==. //10 changes
replace cancer=1 if regexm(coddeath, "CARCINOMA") &  cancer==. //691 changes
replace cancer=1 if regexm(coddeath, "CARCIMONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARINOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOMA") &  cancer==. //99 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMA") &  cancer==. //59 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LYMPHONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "SARCOMA") &  cancer==. //33 changes
replace cancer=1 if regexm(coddeath, "TERATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LEUKEMIA") &  cancer==. //50 changes
replace cancer=1 if regexm(coddeath, "LEUKAEMIA") &  cancer==. //13 changes
replace cancer=1 if regexm(coddeath, "HEPATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARANOMA PROSTATE") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MENINGIOMA") &  cancer==. //8 changes
replace cancer=1 if regexm(coddeath, "MYELOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOFIBROSIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "CYTHEMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTOSIS") &  cancer==. //2 change
replace cancer=1 if regexm(coddeath, "BLASTOMA") &  cancer==. //7 changes
replace cancer=1 if regexm(coddeath, "METASTATIC") &  cancer==. //18 changes
replace cancer=1 if regexm(coddeath, "MASS") &  cancer==. //81 changes
replace cancer=1 if regexm(coddeath, "METASTASES") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "METASTASIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "REFRACTORY") &  cancer==. //2 changes
replace cancer=1 if regexm(coddeath, "FUNGOIDES") &  cancer==. //2 change
replace cancer=1 if regexm(coddeath, "HODGKIN") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MELANOMA") &  cancer==. //2 change
replace cancer=1 if regexm(coddeath,"MYELODYS") &  cancer==. //6 changes
replace cancer=1 if regexm(coddeath,"GLIOMA") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath,"MESOTHELIOMA") &  cancer==. //6 changes

** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes

tab cancer, missing

drop dodyear
gen dodyear=year(dod)
tab dodyear cancer,m

** Check that all cancer CODs for 2014 are eligible
sort coddeath record_id
order record_id coddeath
//list coddeath if cancer==1 & inrange(record_id, 0, 24000)
** 588
//list coddeath if cancer==1 & inrange(record_id, 24001, 27000)
** 778

** Replace 2014 cases that are not cancer according to eligibility SOP:
/*
	(1) After merge with CR5 data then may need to reassign some of below 
		deaths as CR5 data may indicate eligibility while COD may exclude
		(e.g. see record_id==15458)
	(2) use obsid to check for CODs that incomplete in Results window with 
		Data Editor in browse mode-copy and paste record_id below from here
*/
replace cancer=2 if ///
record_id==23197|record_id==21945|record_id==22224|record_id==23208|record_id==23685| ///
record_id==22399|record_id==23068|record_id==22940|record_id==22575|record_id==21804| ///
record_id==23447|record_id==23179|record_id==23873|record_id==22514|record_id==25364| ///
record_id==24032|record_id==25675|record_id==24989|record_id==24752|record_id==25574| ///
record_id==25452|record_id==26634|record_id==25561|record_id==25157|record_id==26562| ///
record_id==26409|record_id==26124|record_id==25031|record_id==25968|record_id==26711| ///
record_id==25255|record_id==25660|record_id==26127|record_id==25258|record_id==24452| ///
record_id==24874|record_id==24536|record_id==25092|record_id==24583|record_id==24077| ///
record_id==24244|record_id==24525|record_id==25640|record_id==24440|record_id==24589| ///
record_id==24383|record_id==25916|record_id==24409|record_id==25385|record_id==24361| ///
record_id==24510|record_id==24786|record_id==26219|record_id==26376|record_id==24168| ///
record_id==24921|record_id==25012|record_id==26129|record_id==24164|record_id==26673| ///
record_id==26553|record_id==26795|record_id==24237|record_id==25772|record_id==25152| ///
record_id==24736|record_id==24394| ///
record_id==20185|record_id==27708|record_id==27934|record_id==27831|record_id==28785| ///
record_id==27542|record_id==19735|record_id==19559|record_id==20315|record_id==20142| ///
record_id==19561|record_id==20137|record_id==29911|record_id==29876|record_id==20974| ///
record_id==28488|record_id==27518|record_id==28606|record_id==19403|record_id==20492| ///
record_id==28128|record_id==28252|record_id==19954|record_id==19608|record_id==28846| ///
record_id==28527|record_id==21301|record_id==29017|record_id==28140|record_id==27693| ///
record_id==20599|record_id==28710|record_id==20027|record_id==19417|record_id==20878| ///
record_id==27415|record_id==20956|record_id==28682|record_id==30012|record_id==28011| ///
record_id==27663|record_id==27689|record_id==28499|record_id==29697|record_id==27490| ///
record_id==20393|record_id==27144|record_id==27064|record_id==27367|record_id==29807| ///
record_id==20591|record_id==29892|record_id==19987|record_id==21983|record_id==22806| ///
record_id==28881|record_id==20385|record_id==28586|record_id==28160|record_id==27988| ///
record_id==28583|record_id==20402|record_id==24650|record_id==24251|record_id==20796| ///
record_id==29087|record_id==21251|record_id==20570
//66 + 68 changes
replace coddeath=subinstr(coddeath,"GLIORRIA","GLIOMA",.) //1 change
//135 changes in total
//04mar2021 JC: didn't check all records with cancer==. as only need to do for 2018 for now


** Check that all 2018 CODs that are not cancer for eligibility
tab dodyear cancer,m
/*
count if cancer==. & inrange(record_id, 0, 23000) //873
count if cancer==. & inrange(record_id, 23001, 24000) //761
count if cancer==. & inrange(record_id, 24001, 2000) //725
//list coddeath if cancer==. & inrange(record_id, 0, 24000)
//list coddeath if cancer==. & inrange(record_id, 24001, 27000)
*/
//list record_id coddeath if cancer==. & dodyear==2018

** Updates needed from above list
replace cancer=1 if ///
record_id==25927|record_id==25497|record_id==25403|record_id==24573|record_id==24813| ///
record_id==24873|record_id==26845
//7 changes

replace cancer=2 if cancer==. //7,568 changes

** Create cod variable 
gen cod=.
label define cod_lab 1 "Dead of cancer" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values cod cod_lab
label var cod "COD categories"
replace cod=1 if cancer==1 //2620 changes
replace cod=2 if cancer==2 //7703 changes
** one unknown causes of death in 2014 data - record_id 12323
replace cod=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")) //80 changes

** Change sex to match cancer dataset
tab sex ,m
rename sex sex_old
gen sex=1 if sex_old==2 //2467 changes
replace sex=2 if sex_old==1 //2587 changes
drop sex_old
label define sex_lab 1 "Female" 2 "Male", modify
label values sex sex_lab
label var sex "Sex"
tab sex ,m

** Remove, relabel certain variables for merging with cancer ds
//gen dds2dod=dod
//format dds2dod %tdCCYY-NN-DD

order record_id regnum nrn pname fname lname sex age dod cancer cod1a addr parish pod

label data "BNR MORTALITY data 2016-2019"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version04\3-output\2016-2019_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2018 deaths with pre-cleaning incidence data

/*
rename regnum dds2regnum 
rename pname dds2pname 
rename age dds2age 
rename cancer dds2cancer 
rename cod1a dds2cod1a 
rename address dds2address 
rename parish dds2parish 
rename pod dds2pod 
rename coddeath dds2coddeath
rename mname dds2mname 
rename namematch dds2namematch 
rename event dds2event 
rename dddoa dds2dddoa 
rename ddda dds2ddda 
rename odda dds2odda 
rename certtype dds2certtype 
rename district dds2district 
rename agetxt dds2agetxt 
rename nrnnd dds2nrnnd
rename mstatus dds2mstatus 
rename occu dds2occu 
rename durationnum dds2durationnum 
rename durationtxt dds2durationtxt 
rename onsetnumcod1a dds2onsetnumcod1a 
rename onsettxtcod1a dds2onsettxtcod1a 
rename cod1b dds2cod1b
rename onsetnumcod1b dds2onsetnumcod1b 
rename onsettxtcod1b dds2onsettxtcod1b 
rename cod1c dds2cod1c 
rename onsetnumcod1c dds2onsetnumcod1c 
rename onsettxtcod1c dds2onsettxtcod1c 
rename cod1d dds2cod1d 
rename onsetnumcod1d dds2onsetnumcod1d
rename onsettxtcod1d dds2onsettxtcod1d 
rename cod2a dds2cod2a 
rename onsetnumcod2a dds2onsetnumcod2a 
rename onsettxtcod2a dds2onsettxtcod2a 
rename cod2b dds2cod2b 
rename onsetnumcod2b dds2onsetnumcod2b 
rename onsettxtcod2b dds2onsettxtcod2b
rename deathparish dds2deathparish 
rename regdate dds2regdate 
rename certifier dds2certifier 
rename certifieraddr dds2certifieraddr 
rename recstatdc dds2recstatdc 
rename tfdddoa dds2tfdddoa 
rename tfddda dds2tfddda 
rename tfregnumstart dds2tfregnumstart
rename tfdistrictstart dds2tfdistrictstart 
rename tfregnumend dds2tfregnumend 
rename tfdistrictend dds2tfdistrictend 
rename tfddtxt dds2tfddtxt 
rename recstattf dds2recstattf 
rename duprec dds2duprec 
rename dupname dds2dupname 
rename dupdod dds2dupdod
rename dodyear dds2dodyear 
rename cod dds2cod
*/
/*    
label copy recstattf_lab dds2recstattf_lab       
label copy tfddda_lab dds2tfddda_lab
label copy recstatdc_lab dds2recstatdc_lab
label copy namematch_lab dds2namematch_lab
label copy deathparish_lab dds2deathparish_lab
label copy onsettxtcod2b_lab dds2onsettxtcod2b_lab
label copy onsettxtcod2a_lab dds2onsettxtcod2a_lab
label copy onsettxtcod1d_lab dds2onsettxtcod1d_lab
label copy onsettxtcod1c_lab dds2onsettxtcod1c_lab
label copy onsettxtcod1b_lab dds2onsettxtcod1b_lab
label copy onsettxtcod1a_lab dds2onsettxtcod1a_lab
label copy durationtxt_lab dds2durationtxt_lab
label copy mstatus_lab dds2mstatus_lab
label copy agetxt_lab dds2agetxt_lab
label copy parish_lab dds2parish_lab
label copy district_lab dds2district_lab
label copy certtype_lab dds2certtype_lab
label copy ddda_lab dds2ddda_lab
label copy event_lab dds2event_lab
label copy cancer_lab dds2cancer_lab
label copy cod_lab dds2cod_lab
label copy sex_lab dds2sex_lab

label drop recstattf_lab
label drop tfddda_lab
label drop recstatdc_lab
label drop namematch_lab
label drop deathparish_lab
label drop onsettxtcod2b_lab
label drop onsettxtcod2a_lab
label drop onsettxtcod1d_lab
label drop onsettxtcod1c_lab
label drop onsettxtcod1b_lab
label drop onsettxtcod1a_lab
label drop durationtxt_lab
label drop mstatus_lab
label drop agetxt_lab
label drop parish_lab
label drop district_lab
label drop certtype_lab
label drop ddda_lab
label drop event_lab
label drop cancer_lab
label drop cod_lab
label drop sex_lab
*/

** Create 2018 death dataset for pre-cleaning matching with CR5 dataset for DAs to use in final further retrieval and DCO trace-back for 2018 cases
drop if dodyear!=2018 // deleted

** Prep NRN field for merging with cancer dataset
//nsplit nrn, digits(6 4) gen(nrndob nrnnum)
gen double nrn2=nrn
format nrn2 %15.0g
tostring nrn2 ,replace
gen nrndob=substr(nrn2,1,6) if length(nrn2)==10
gen nrnnum=substr(nrn2,7,4) if length(nrn2)==10
gen natregno=nrndob+"-"+nrnnum if length(nrn2)==10
drop nrn2 nrndob nrnnum

label data "BNR MORTALITY data 2018"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version04\3-output\2018_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2018 deaths with pre-cleaning incidence data

